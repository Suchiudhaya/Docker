name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # trigger on push to main branch

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 3️⃣ Login to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | \
          docker login --username AWS --password-stdin 171961474458.dkr.ecr.us-east-1.amazonaws.com

      # 4️⃣ Build Docker images
      - name: Build frontend image
        run: |
          docker build -t docker-frontend ./frontend
          docker tag docker-frontend:latest 171961474458.dkr.ecr.us-east-1.amazonaws.com/frontend:v1

      - name: Build nginx image
        run: |
          docker build -t docker-nginx-service ./nginx
          docker tag docker-nginx-service:latest 171961474458.dkr.ecr.us-east-1.amazonaws.com/nginx-service:nginx-v1

      # 5️⃣ Tag users and status service images
      - name: Tag users and status service images
        run: |
          docker tag docker-users-service:latest 171961474458.dkr.ecr.us-east-1.amazonaws.com/services:users-v1
          docker tag docker-status-service:latest 171961474458.dkr.ecr.us-east-1.amazonaws.com/services:status-v1

      # 6️⃣ Push all images to ECR
      - name: Push images to ECR
        run: |
          docker push 171961474458.dkr.ecr.us-east-1.amazonaws.com/frontend:v1
          docker push 171961474458.dkr.ecr.us-east-1.amazonaws.com/nginx-service:nginx-v1
          docker push 171961474458.dkr.ecr.us-east-1.amazonaws.com/services:users-v1
          docker push 171961474458.dkr.ecr.us-east-1.amazonaws.com/services:status-v1

      # 7️⃣ Deploy to EC2 via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}       # EC2 public IP or DNS
          username: ubuntu                     # EC2 user
          key: ${{ secrets.EC2_KEY }}         # SSH private key
          script: |
            cd /home/ubuntu/Docker
            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d
