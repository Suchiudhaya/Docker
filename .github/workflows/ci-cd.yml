name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 3️⃣ Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4️⃣ Build, Tag, Push Docker Images
      - name: Build, Tag & Push Docker Images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Frontend
          docker build -t frontend ./frontend
          docker tag frontend:latest $ECR_REGISTRY/frontend:frontend-v1
          docker push $ECR_REGISTRY/frontend:frontend-v1

          # Users Service
          docker build -t users-service ./services/users-service
          docker tag users-service:latest $ECR_REGISTRY/services:users-v1
          docker push $ECR_REGISTRY/services:users-v1

          # Status Service
          docker build -t status-service ./services/status-service
          docker tag status-service:latest $ECR_REGISTRY/services:status-v1
          docker push $ECR_REGISTRY/services:status-v1

          # Nginx
          docker build -t nginx-service ./nginx
          docker tag nginx-service:latest $ECR_REGISTRY/nginx-service:nginx-v1
          docker push $ECR_REGISTRY/nginx-service:nginx-v1

      # 5️⃣ Deploy on EC2
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/Docker

            # Re-login to ECR (token refresh)
            aws ecr get-login-password --region us-east-1 | \
            docker login --username AWS --password-stdin 171961474458.dkr.ecr.us-east-1.amazonaws.com

            # Pull latest images
            sudo docker-compose pull

            # Restart containers
            sudo docker-compose up -d
